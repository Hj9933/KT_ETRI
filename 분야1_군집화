{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMM5LV6qUYs3TESi009AHtR"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4OaFfJsOvaEG","executionInfo":{"status":"ok","timestamp":1691968029278,"user_tz":-540,"elapsed":24376,"user":{"displayName":"다경","userId":"04164406032455601319"}},"outputId":"efb9237c-6aae-4827-d130-10590f40934c"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","source":["%cd /content/drive/MyDrive/Project/2023/KT_ETRI/"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HmPCKy-vvjIV","executionInfo":{"status":"ok","timestamp":1691968040103,"user_tz":-540,"elapsed":2,"user":{"displayName":"다경","userId":"04164406032455601319"}},"outputId":"e838d4b1-88ca-42e1-df80-77c3b753240e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/Project/2023/KT_ETRI\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns"],"metadata":{"id":"5IdLUZbOv2qc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["q1_data = pd.read_csv('Q1_data/Q1_train.csv')\n","q1_test = pd.read_csv('Q1_data/Q1_test.csv', index_col = 0)\n","q1_data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":473},"id":"nr4Rp133v1Bj","executionInfo":{"status":"ok","timestamp":1691968045559,"user_tz":-540,"elapsed":2263,"user":{"displayName":"다경","userId":"04164406032455601319"}},"outputId":"bd9bd7a3-4b2f-4671-ae1f-9a6fde686e4c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              datetime         ru_id  scgfail  scgfailratio  erabaddatt  \\\n","0  2023-05-19 00:00:00  BaseStationG        0           0.0          12   \n","1  2023-05-19 00:00:00  BaseStationE        0           0.0          28   \n","2  2023-05-19 00:00:00  BaseStationF        1           3.7          27   \n","3  2023-05-19 00:00:00  BaseStationI        0           0.0           1   \n","4  2023-05-19 00:00:00  BaseStationD        0           0.0          29   \n","\n","   erabaddsucc  endcaddatt  endcaddsucc  endcmodbymenbatt  endcmodbymenbsucc  \\\n","0           12          10           10                 0                  0   \n","1           28          27           27                11                 11   \n","2           27          17           17                 8                  8   \n","3            1           1            1                 0                  0   \n","4           29          29           29                 1                  1   \n","\n","   ...  bler_ul  bler_dl  rachpreamblea  numrar  nummsg3  attpaging  \\\n","0  ...     10.5     22.4           47.0    47.0     17.0     2243.0   \n","1  ...     19.4      8.8          174.0   174.0     39.0     2240.0   \n","2  ...     15.5      6.0          137.0   137.0     53.0     1337.0   \n","3  ...      8.5      5.7          259.0   259.0      5.0     1401.0   \n","4  ...     18.3      9.2           51.0    51.0     35.0     2083.0   \n","\n","   rssipathavg  dlreceivedcqiavg  endcrelbymenb  uenomax  \n","0        -93.3              11.1              0        1  \n","1        -93.5              10.2              4        5  \n","2        -92.7              11.3              2        6  \n","3        -92.8              13.6              0        1  \n","4        -92.7              12.4             28        4  \n","\n","[5 rows x 39 columns]"],"text/html":["\n","\n","  <div id=\"df-7d4020b1-adf9-440f-abb7-086c0511de80\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>datetime</th>\n","      <th>ru_id</th>\n","      <th>scgfail</th>\n","      <th>scgfailratio</th>\n","      <th>erabaddatt</th>\n","      <th>erabaddsucc</th>\n","      <th>endcaddatt</th>\n","      <th>endcaddsucc</th>\n","      <th>endcmodbymenbatt</th>\n","      <th>endcmodbymenbsucc</th>\n","      <th>...</th>\n","      <th>bler_ul</th>\n","      <th>bler_dl</th>\n","      <th>rachpreamblea</th>\n","      <th>numrar</th>\n","      <th>nummsg3</th>\n","      <th>attpaging</th>\n","      <th>rssipathavg</th>\n","      <th>dlreceivedcqiavg</th>\n","      <th>endcrelbymenb</th>\n","      <th>uenomax</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2023-05-19 00:00:00</td>\n","      <td>BaseStationG</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>12</td>\n","      <td>12</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>10.5</td>\n","      <td>22.4</td>\n","      <td>47.0</td>\n","      <td>47.0</td>\n","      <td>17.0</td>\n","      <td>2243.0</td>\n","      <td>-93.3</td>\n","      <td>11.1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2023-05-19 00:00:00</td>\n","      <td>BaseStationE</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>28</td>\n","      <td>28</td>\n","      <td>27</td>\n","      <td>27</td>\n","      <td>11</td>\n","      <td>11</td>\n","      <td>...</td>\n","      <td>19.4</td>\n","      <td>8.8</td>\n","      <td>174.0</td>\n","      <td>174.0</td>\n","      <td>39.0</td>\n","      <td>2240.0</td>\n","      <td>-93.5</td>\n","      <td>10.2</td>\n","      <td>4</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2023-05-19 00:00:00</td>\n","      <td>BaseStationF</td>\n","      <td>1</td>\n","      <td>3.7</td>\n","      <td>27</td>\n","      <td>27</td>\n","      <td>17</td>\n","      <td>17</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>...</td>\n","      <td>15.5</td>\n","      <td>6.0</td>\n","      <td>137.0</td>\n","      <td>137.0</td>\n","      <td>53.0</td>\n","      <td>1337.0</td>\n","      <td>-92.7</td>\n","      <td>11.3</td>\n","      <td>2</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2023-05-19 00:00:00</td>\n","      <td>BaseStationI</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>8.5</td>\n","      <td>5.7</td>\n","      <td>259.0</td>\n","      <td>259.0</td>\n","      <td>5.0</td>\n","      <td>1401.0</td>\n","      <td>-92.8</td>\n","      <td>13.6</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2023-05-19 00:00:00</td>\n","      <td>BaseStationD</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>29</td>\n","      <td>29</td>\n","      <td>29</td>\n","      <td>29</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>18.3</td>\n","      <td>9.2</td>\n","      <td>51.0</td>\n","      <td>51.0</td>\n","      <td>35.0</td>\n","      <td>2083.0</td>\n","      <td>-92.7</td>\n","      <td>12.4</td>\n","      <td>28</td>\n","      <td>4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 39 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7d4020b1-adf9-440f-abb7-086c0511de80')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-7be20e85-c558-4c32-880d-9952644b8207\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7be20e85-c558-4c32-880d-9952644b8207')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-7be20e85-c558-4c32-880d-9952644b8207 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7d4020b1-adf9-440f-abb7-086c0511de80 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7d4020b1-adf9-440f-abb7-086c0511de80');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["### dtype 맞게 전처리\n","\n","datetime : object &rightarrow; datetime"],"metadata":{"id":"j9NBgOzhxQXT"}},{"cell_type":"code","source":["q1_data['datetime'] = pd.to_datetime(q1_data['datetime'])\n","q1_test['datetime'] = pd.to_datetime(q1_test['datetime'])"],"metadata":{"id":"knRb0SNBv-gm"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### ratio 변수 통일 + 변수 drop\n","\n","연결 성공한 횟수 &rightarrow; 연결 성공 백분율로 변경"],"metadata":{"id":"Cv8H2adOxYOh"}},{"cell_type":"code","source":["# 연결 성공한 횟수 -> 연결 성공 백분율로 변경\n","q1_data['erabaddratio'] = (q1_data['erabaddsucc'] / q1_data['erabaddatt']) * 100\n","q1_data['endcaddratio'] = (q1_data['endcaddsucc'] / q1_data['endcaddatt']) * 100\n","q1_data['endcmodbymenbratio'] = (q1_data['endcmodbymenbsucc'] / q1_data['endcmodbymenbatt']) * 100\n","q1_data['endcmodbysgnbratio'] = (q1_data['endcmodbysgnbsucc'] / q1_data['endcmodbysgnbatt']) * 100\n","q1_data['connestabratio'] = (q1_data['connestabsucc'] / q1_data['connestabatt']) * 100\n","q1_data['handoverratio'] = (q1_data['handoversucc'] / q1_data['handoveratt']) * 100\n","q1_data['reestabratio'] = (q1_data['reestabsucc'] / q1_data['reestabatt']) * 100"],"metadata":{"id":"P422rRxRx-0h"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 연결 성공한 횟수 -> 연결 성공 백분율로 변경\n","q1_test['erabaddratio'] = (q1_test['erabaddsucc'] / q1_test['erabaddatt']) * 100\n","q1_test['endcaddratio'] = (q1_test['endcaddsucc'] / q1_test['endcaddatt']) * 100\n","q1_test['endcmodbymenbratio'] = (q1_test['endcmodbymenbsucc'] / q1_test['endcmodbymenbatt']) * 100\n","q1_test['endcmodbysgnbratio'] = (q1_test['endcmodbysgnbsucc'] / q1_test['endcmodbysgnbatt']) * 100\n","q1_test['connestabratio'] = (q1_test['connestabsucc'] / q1_test['connestabatt']) * 100\n","q1_test['handoverratio'] = (q1_test['handoversucc'] / q1_test['handoveratt']) * 100\n","q1_test['reestabratio'] = (q1_test['reestabsucc'] / q1_test['reestabatt']) * 100"],"metadata":{"id":"2cLg2ViKmDAZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 연결 시도한 횟수가 0이어서 성공 백분율이 nan이 된 값들을 0으로 바꿔주기\n","ratios = ['erabaddratio', 'endcaddratio', 'endcmodbymenbratio', 'endcmodbysgnbratio', 'connestabratio', 'handoverratio', 'reestabratio']\n","for i in ratios :\n","  q1_data[i] = q1_data[i].replace(np.nan, 0)"],"metadata":{"id":"RbL6k12Z3qQv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 연결 시도한 횟수가 0이어서 성공 백분율이 nan이 된 값들을 0으로 바꿔주기\n","for i in ratios :\n","  q1_test[i] = q1_test[i].replace(np.nan, 0)"],"metadata":{"id":"1RWVlfObmLs8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["list = ['erabaddsucc', 'endcaddsucc', 'endcmodbymenbsucc', 'endcmodbysgnbsucc', 'connestabsucc', 'handoversucc', 'reestabsucc']\n","q1_data = q1_data.drop(list, axis = 1)"],"metadata":{"id":"n7WVipNazPZm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["q1_test = q1_test.drop(list, axis = 1)"],"metadata":{"id":"g656g7q8moMI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 순서 재배치 + scgfail, redirectiontolte_emergencyfallback, numrar drop\n","col = q1_data.columns.to_numpy()\n","col = col[[0,1,3,4,32,5,33,6,34,7,35,8,36,9,10,12,37,13,38,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31]]\n","q1_data = q1_data[col]\n","q1_data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oA6Z18ukzdN-","executionInfo":{"status":"ok","timestamp":1691968053439,"user_tz":-540,"elapsed":2,"user":{"displayName":"다경","userId":"04164406032455601319"}},"outputId":"3f6be5ee-ad30-48dd-909a-1914d2f7ba0d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 137445 entries, 0 to 137444\n","Data columns (total 36 columns):\n"," #   Column                        Non-Null Count   Dtype         \n","---  ------                        --------------   -----         \n"," 0   datetime                      137445 non-null  datetime64[ns]\n"," 1   ru_id                         137445 non-null  object        \n"," 2   scgfailratio                  137445 non-null  float64       \n"," 3   erabaddatt                    137445 non-null  int64         \n"," 4   erabaddratio                  137445 non-null  float64       \n"," 5   endcaddatt                    137445 non-null  int64         \n"," 6   endcaddratio                  137445 non-null  float64       \n"," 7   endcmodbymenbatt              137445 non-null  int64         \n"," 8   endcmodbymenbratio            137445 non-null  float64       \n"," 9   endcmodbysgnbatt              137445 non-null  int64         \n"," 10  endcmodbysgnbratio            137445 non-null  float64       \n"," 11  connestabatt                  137445 non-null  int64         \n"," 12  connestabratio                137445 non-null  float64       \n"," 13  redirectiontolte_coverageout  137445 non-null  int64         \n"," 14  redirectiontolte_epsfallback  137445 non-null  int64         \n"," 15  handoveratt                   137445 non-null  int64         \n"," 16  handoverratio                 137445 non-null  float64       \n"," 17  reestabatt                    137445 non-null  int64         \n"," 18  reestabratio                  137445 non-null  float64       \n"," 19  rlculbyte                     137436 non-null  float64       \n"," 20  rlcdlbyte                     137436 non-null  float64       \n"," 21  totprbulavg                   137436 non-null  float64       \n"," 22  totprbdlavg                   137436 non-null  float64       \n"," 23  dlreceivedriavg               137436 non-null  float64       \n"," 24  dltransmittedmcsavg           137436 non-null  float64       \n"," 25  airmaculbyte                  137436 non-null  float64       \n"," 26  airmacdlbyte                  137436 non-null  float64       \n"," 27  bler_ul                       137436 non-null  float64       \n"," 28  bler_dl                       137436 non-null  float64       \n"," 29  rachpreamblea                 137436 non-null  float64       \n"," 30  nummsg3                       137436 non-null  float64       \n"," 31  attpaging                     137436 non-null  float64       \n"," 32  rssipathavg                   137436 non-null  float64       \n"," 33  dlreceivedcqiavg              137436 non-null  float64       \n"," 34  endcrelbymenb                 137445 non-null  int64         \n"," 35  uenomax                       137445 non-null  int64         \n","dtypes: datetime64[ns](1), float64(23), int64(11), object(1)\n","memory usage: 37.8+ MB\n"]}]},{"cell_type":"code","source":["col = q1_test.columns.to_numpy()\n","col = col[[0,1,3,4,31,5,32,6,33,7,34,8,35,9,10,12,36,13,37,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30]]\n","q1_test = q1_test[col]\n","q1_test.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IIkBEsrpmsT_","executionInfo":{"status":"ok","timestamp":1691968054206,"user_tz":-540,"elapsed":2,"user":{"displayName":"다경","userId":"04164406032455601319"}},"outputId":"1d5941f4-1e6c-4a1a-8751-a4e0ae072434"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 34362 entries, 0 to 34361\n","Data columns (total 35 columns):\n"," #   Column                        Non-Null Count  Dtype         \n","---  ------                        --------------  -----         \n"," 0   datetime                      34362 non-null  datetime64[ns]\n"," 1   ru_id                         34362 non-null  object        \n"," 2   scgfailratio                  34362 non-null  float64       \n"," 3   erabaddatt                    34362 non-null  int64         \n"," 4   erabaddratio                  34362 non-null  float64       \n"," 5   endcaddatt                    34362 non-null  int64         \n"," 6   endcaddratio                  34362 non-null  float64       \n"," 7   endcmodbymenbatt              34362 non-null  int64         \n"," 8   endcmodbymenbratio            34362 non-null  float64       \n"," 9   endcmodbysgnbatt              34362 non-null  int64         \n"," 10  endcmodbysgnbratio            34362 non-null  float64       \n"," 11  connestabatt                  34362 non-null  int64         \n"," 12  connestabratio                34362 non-null  float64       \n"," 13  redirectiontolte_coverageout  34362 non-null  int64         \n"," 14  redirectiontolte_epsfallback  34362 non-null  int64         \n"," 15  handoveratt                   34362 non-null  int64         \n"," 16  handoverratio                 34362 non-null  float64       \n"," 17  reestabatt                    34362 non-null  int64         \n"," 18  reestabratio                  34362 non-null  float64       \n"," 19  rlculbyte                     34362 non-null  float64       \n"," 20  rlcdlbyte                     34362 non-null  float64       \n"," 21  totprbulavg                   34362 non-null  float64       \n"," 22  totprbdlavg                   34362 non-null  float64       \n"," 23  dlreceivedriavg               34362 non-null  float64       \n"," 24  dltransmittedmcsavg           34362 non-null  float64       \n"," 25  airmaculbyte                  34362 non-null  float64       \n"," 26  airmacdlbyte                  34362 non-null  float64       \n"," 27  bler_ul                       34362 non-null  float64       \n"," 28  bler_dl                       34362 non-null  float64       \n"," 29  rachpreamblea                 34362 non-null  float64       \n"," 30  nummsg3                       34362 non-null  float64       \n"," 31  attpaging                     34362 non-null  float64       \n"," 32  rssipathavg                   34362 non-null  float64       \n"," 33  dlreceivedcqiavg              34362 non-null  float64       \n"," 34  endcrelbymenb                 34362 non-null  int64         \n","dtypes: datetime64[ns](1), float64(23), int64(10), object(1)\n","memory usage: 9.4+ MB\n"]}]},{"cell_type":"markdown","source":["### 결측치\n","\n","test 데이터에는 결측치 없음"],"metadata":{"id":"3XCEwqvJ8j-S"}},{"cell_type":"code","source":["q1_data.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"M6EvaHyFhr5Z","executionInfo":{"status":"ok","timestamp":1691922965320,"user_tz":-540,"elapsed":282,"user":{"displayName":"다경","userId":"04164406032455601319"}},"outputId":"4fbdaad4-28da-42b6-a9b5-acd8480481b7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["datetime                        0\n","ru_id                           0\n","scgfailratio                    0\n","erabaddatt                      0\n","erabaddratio                    0\n","endcaddatt                      0\n","endcaddratio                    0\n","endcmodbymenbatt                0\n","endcmodbymenbratio              0\n","endcmodbysgnbatt                0\n","endcmodbysgnbratio              0\n","connestabatt                    0\n","connestabratio                  0\n","redirectiontolte_coverageout    0\n","redirectiontolte_epsfallback    0\n","handoveratt                     0\n","handoverratio                   0\n","reestabatt                      0\n","reestabratio                    0\n","rlculbyte                       9\n","rlcdlbyte                       9\n","totprbulavg                     9\n","totprbdlavg                     9\n","dlreceivedriavg                 9\n","dltransmittedmcsavg             9\n","airmaculbyte                    9\n","airmacdlbyte                    9\n","bler_ul                         9\n","bler_dl                         9\n","rachpreamblea                   9\n","nummsg3                         9\n","attpaging                       9\n","rssipathavg                     9\n","dlreceivedcqiavg                9\n","endcrelbymenb                   0\n","uenomax                         0\n","dtype: int64"]},"metadata":{},"execution_count":14}]},{"cell_type":"markdown","source":["##### **결측치 제거**"],"metadata":{"id":"YUfF5QWqhNxo"}},{"cell_type":"code","source":["#q1_data1 = q1_data.dropna(axis = 0)\n","#q1_data1.isna().sum()"],"metadata":{"id":"Cl_Votg58kxG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1691735870509,"user_tz":-540,"elapsed":2,"user":{"displayName":"다경","userId":"04164406032455601319"}},"outputId":"115f05fa-7810-4575-d93e-b5264f942064"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["datetime                        0\n","ru_id                           0\n","scgfailratio                    0\n","erabaddatt                      0\n","erabaddratio                    0\n","endcaddatt                      0\n","endcaddratio                    0\n","endcmodbymenbatt                0\n","endcmodbymenbratio              0\n","endcmodbysgnbatt                0\n","endcmodbysgnbratio              0\n","connestabatt                    0\n","connestabratio                  0\n","redirectiontolte_coverageout    0\n","redirectiontolte_epsfallback    0\n","handoveratt                     0\n","handoverratio                   0\n","reestabatt                      0\n","reestabratio                    0\n","rlculbyte                       0\n","rlcdlbyte                       0\n","totprbulavg                     0\n","totprbdlavg                     0\n","dlreceivedriavg                 0\n","dltransmittedmcsavg             0\n","airmaculbyte                    0\n","airmacdlbyte                    0\n","bler_ul                         0\n","bler_dl                         0\n","rachpreamblea                   0\n","nummsg3                         0\n","attpaging                       0\n","rssipathavg                     0\n","dlreceivedcqiavg                0\n","endcrelbymenb                   0\n","uenomax                         0\n","dtype: int64"]},"metadata":{},"execution_count":18}]},{"cell_type":"markdown","source":["저번 전처리 이후로 추가된 부분"],"metadata":{"id":"W3UmfOQGJ7Md"}},{"cell_type":"markdown","source":["### ru_id 별로 분리"],"metadata":{"id":"QRstX4MKUNFX"}},{"cell_type":"markdown","source":["B, J 제외 : train\n","\n","B, J : test"],"metadata":{"id":"bGD7TvuGAeTI"}},{"cell_type":"code","source":["q1_data['ru_id'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3qZGGnkCUV8G","executionInfo":{"status":"ok","timestamp":1691968081427,"user_tz":-540,"elapsed":2,"user":{"displayName":"다경","userId":"04164406032455601319"}},"outputId":"c7053ba7-b72b-48cd-e4a0-09e8a44ec230"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["BaseStationI    17181\n","BaseStationD    17181\n","BaseStationC    17181\n","BaseStationA    17181\n","BaseStationH    17181\n","BaseStationG    17180\n","BaseStationE    17180\n","BaseStationF    17180\n","Name: ru_id, dtype: int64"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["StationA = q1_data[q1_data['ru_id'] == 'BaseStationA']\n","StationC = q1_data[q1_data['ru_id'] == 'BaseStationC']\n","StationD = q1_data[q1_data['ru_id'] == 'BaseStationD']\n","StationE = q1_data[q1_data['ru_id'] == 'BaseStationE']\n","StationF = q1_data[q1_data['ru_id'] == 'BaseStationF']\n","StationG = q1_data[q1_data['ru_id'] == 'BaseStationG']\n","StationH = q1_data[q1_data['ru_id'] == 'BaseStationH']\n","StationI = q1_data[q1_data['ru_id'] == 'BaseStationI']"],"metadata":{"id":"icl3aLwzUmWu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["StationA.reset_index(drop = True, inplace = True)\n","StationC.reset_index(drop = True, inplace = True)\n","StationD.reset_index(drop = True, inplace = True)\n","StationE.reset_index(drop = True, inplace = True)\n","StationF.reset_index(drop = True, inplace = True)\n","StationG.reset_index(drop = True, inplace = True)\n","StationH.reset_index(drop = True, inplace = True)\n","StationI.reset_index(drop = True, inplace = True)"],"metadata":{"id":"T6DBaTahIGsm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["q1_test['ru_id'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RM_Nhju0VGwN","executionInfo":{"status":"ok","timestamp":1691968091442,"user_tz":-540,"elapsed":2,"user":{"displayName":"다경","userId":"04164406032455601319"}},"outputId":"50a1a251-a7f6-4295-e4bb-fc2024855217"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["BaseStationJ    17181\n","BaseStationB    17181\n","Name: ru_id, dtype: int64"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["StationB = q1_test[q1_test['ru_id'] == 'BaseStationB']\n","StationJ = q1_test[q1_test['ru_id'] == 'BaseStationJ']"],"metadata":{"id":"1mOhcdftVCJQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["StationB.reset_index(drop = True, inplace = True)\n","StationJ.reset_index(drop = True, inplace = True)"],"metadata":{"id":"tHYji8YoIXf8"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### **선형 보간법**"],"metadata":{"id":"8K3cfPjYVeNK"}},{"cell_type":"code","source":["from scipy import interpolate"],"metadata":{"id":"P7KydmjWAcKh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["missing_col = ['rlculbyte', 'rlcdlbyte', 'totprbulavg', 'totprbdlavg', 'dlreceivedriavg', 'dltransmittedmcsavg',\n","               'airmaculbyte', 'airmacdlbyte', 'bler_ul', 'bler_dl', 'rachpreamblea', 'nummsg3', 'attpaging',\n","               'rssipathavg', 'dlreceivedcqiavg']"],"metadata":{"id":"rDs0ezx4BCE8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["for i in missing_col :\n","  StationE[i].interpolate(method = 'linear', inplace = True)\n","  StationF[i].interpolate(method = 'linear', inplace = True)\n","  StationG[i].interpolate(method = 'linear', inplace = True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"K_ueXijFIgJ9","executionInfo":{"status":"ok","timestamp":1691968096730,"user_tz":-540,"elapsed":2,"user":{"displayName":"다경","userId":"04164406032455601319"}},"outputId":"980ad2fb-9008-4514-adaa-14be5d011e5b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-25-dd317443b75a>:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  StationE[i].interpolate(method = 'linear', inplace = True)\n","<ipython-input-25-dd317443b75a>:3: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  StationF[i].interpolate(method = 'linear', inplace = True)\n","<ipython-input-25-dd317443b75a>:4: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  StationG[i].interpolate(method = 'linear', inplace = True)\n"]}]},{"cell_type":"markdown","source":["E, F, G는 결측치 채워도 다른 애들보다 데이터가 1개 적음\n","\n","-> 사실상 E, F, G 에는 결측치가 한 개씩 더 있는것과 마찬가지임(2023-06-28 0:50)"],"metadata":{"id":"okwekkuPUFJy"}},{"cell_type":"code","source":["for i in range(len(StationA)) :\n","  if StationA['datetime'][i] != StationE['datetime'][i] :\n","    print(i)\n","    break"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_DKwrhk1TFUx","executionInfo":{"status":"ok","timestamp":1691968110798,"user_tz":-540,"elapsed":1155,"user":{"displayName":"다경","userId":"04164406032455601319"}},"outputId":"842928a1-4a59-4242-ef55-e1e5e697dd9a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["11530\n"]}]},{"cell_type":"code","source":["for i in range(len(StationA)) :\n","  if StationA['datetime'][i] != StationF['datetime'][i] :\n","    print(i)\n","    break"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"K7SC6lr6TdDn","executionInfo":{"status":"ok","timestamp":1691968111200,"user_tz":-540,"elapsed":2,"user":{"displayName":"다경","userId":"04164406032455601319"}},"outputId":"919db7ef-8e22-446c-8ded-6b16d5d8a1c3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["11530\n"]}]},{"cell_type":"code","source":["for i in range(len(StationA)) :\n","  if StationA['datetime'][i] != StationG['datetime'][i] :\n","    print(i)\n","    break"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZR52sTzvTeJt","executionInfo":{"status":"ok","timestamp":1691968114236,"user_tz":-540,"elapsed":413,"user":{"displayName":"다경","userId":"04164406032455601319"}},"outputId":"3c301ce3-042a-446f-ed3f-87f8bcb8e18a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["11530\n"]}]},{"cell_type":"code","source":["StationA.iloc[11530, 0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gyot5FMFTgiV","executionInfo":{"status":"ok","timestamp":1691968116793,"user_tz":-540,"elapsed":2,"user":{"displayName":"다경","userId":"04164406032455601319"}},"outputId":"ab49c6cc-a482-4c15-c9f2-0659ddd32e15"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Timestamp('2023-06-28 00:55:00')"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["StationE.iloc[11530, 0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kdqwdRl5UgSx","executionInfo":{"status":"ok","timestamp":1691968117214,"user_tz":-540,"elapsed":2,"user":{"displayName":"다경","userId":"04164406032455601319"}},"outputId":"7e6ed796-17a7-4c6b-9b0f-79c78527cf58"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Timestamp('2023-06-28 01:00:00')"]},"metadata":{},"execution_count":30}]},{"cell_type":"markdown","source":["E, F, G 2023-06-28 00:55:00 값도 선형보간법으로 채워주기\n","\n","-> 이렇게 하면 int 형태의 변수들이 float값을 가지게 되니까, 반올림 해주기!"],"metadata":{"id":"kQgn1v07UWsT"}},{"cell_type":"code","source":["int_list = ['erabaddatt', 'endcaddatt', 'endcmodbymenbatt', 'endcmodbysgnbatt', 'connestabatt', 'redirectiontolte_coverageout', 'redirectiontolte_epsfallback', 'handoveratt', 'reestabatt', 'endcrelbymenb', 'uenomax',\n","            'rachpreamblea', 'nummsg3', 'attpaging']"],"metadata":{"id":"l9FuSBp4ZlFR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df1 = pd.DataFrame(['2023-06-28 00:55:00', 'BaseStationE'], index = ['datetime', 'ru_id']).transpose()\n","df2 = pd.DataFrame((StationE.iloc[11529, 2:] + StationE.iloc[11530, 2:]) / 2).transpose()\n","E_new = pd.concat([df1, df2], axis = 1)\n","E_new['datetime'] = pd.to_datetime(E_new['datetime'])\n","StationE = pd.concat([StationE.iloc[:11530], E_new, StationE.iloc[11530:]], ignore_index = True)"],"metadata":{"id":"97qSAuIuU1bq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df1 = pd.DataFrame(['2023-06-28 00:55:00', 'BaseStationF'], index = ['datetime', 'ru_id']).transpose()\n","df2 = pd.DataFrame((StationF.iloc[11529, 2:] + StationF.iloc[11530, 2:]) / 2).transpose()\n","F_new = pd.concat([df1, df2], axis = 1)\n","F_new['datetime'] = pd.to_datetime(F_new['datetime'])\n","StationF = pd.concat([StationF.iloc[:11530], F_new, StationF.iloc[11530:]], ignore_index = True)"],"metadata":{"id":"fgoJdGM7dUZG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df1 = pd.DataFrame(['2023-06-28 00:55:00', 'BaseStationG'], index = ['datetime', 'ru_id']).transpose()\n","df2 = pd.DataFrame((StationG.iloc[11529, 2:] + StationG.iloc[11530, 2:]) / 2).transpose()\n","G_new = pd.concat([df1, df2], axis = 1)\n","G_new['datetime'] = pd.to_datetime(G_new['datetime'])\n","StationG = pd.concat([StationG.iloc[:11530], G_new, StationG.iloc[11530:]], ignore_index = True)"],"metadata":{"id":"fzFvk4radUYJ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### **int형인데 보간법때문에 소수점을 갖게 된 값들 반올림해주기**"],"metadata":{"id":"qhAr-QacfA2f"}},{"cell_type":"code","source":["StationE[int_list] = StationE[int_list].round(decimals = 0)\n","StationE[int_list] = StationE[int_list].astype(int)\n","\n","StationF[int_list] = StationF[int_list].round(decimals = 0)\n","StationF[int_list] = StationF[int_list].astype(int)\n","\n","StationG[int_list] = StationG[int_list].round(decimals = 0)\n","StationG[int_list] = StationG[int_list].astype(int)"],"metadata":{"id":"ES23CLSgdjaL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["StationE.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":473},"id":"CO1qkfKYgEPX","executionInfo":{"status":"ok","timestamp":1691968141133,"user_tz":-540,"elapsed":4,"user":{"displayName":"다경","userId":"04164406032455601319"}},"outputId":"60d6ec19-d0ba-4044-f121-f2a8abce8a19"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             datetime         ru_id scgfailratio  erabaddatt erabaddratio  \\\n","0 2023-05-19 00:00:00  BaseStationE          0.0          28        100.0   \n","1 2023-05-19 00:05:00  BaseStationE          0.0          16        100.0   \n","2 2023-05-19 00:10:00  BaseStationE          0.0          23        100.0   \n","3 2023-05-19 00:15:00  BaseStationE          0.0          21        100.0   \n","4 2023-05-19 00:20:00  BaseStationE          0.0          33        100.0   \n","\n","   endcaddatt endcaddratio  endcmodbymenbatt endcmodbymenbratio  \\\n","0          27        100.0                11              100.0   \n","1          14        100.0                 4              100.0   \n","2          18        100.0                 3              100.0   \n","3           9        100.0                12              100.0   \n","4          26        100.0                 3              100.0   \n","\n","   endcmodbysgnbatt  ... airmacdlbyte  bler_ul bler_dl  rachpreamblea  \\\n","0                34  ...      73315.0     19.4     8.8            174   \n","1                23  ...     146510.0     17.1     6.1            108   \n","2                15  ...       4073.0     20.7     1.4            102   \n","3                16  ...       6594.0     17.9     0.8            150   \n","4                13  ...        616.0     12.0     2.4            102   \n","\n","   nummsg3  attpaging rssipathavg  dlreceivedcqiavg endcrelbymenb uenomax  \n","0       39       2240       -93.5              10.2             4       5  \n","1       24       2074       -93.4              10.3             1       4  \n","2       24       2094       -93.7               9.7             2       5  \n","3       35       1891       -93.7              10.6             5       5  \n","4       39       1927       -93.8               9.7             0       5  \n","\n","[5 rows x 36 columns]"],"text/html":["\n","\n","  <div id=\"df-445d9ed9-e224-4302-95e8-7c0bd506c13d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>datetime</th>\n","      <th>ru_id</th>\n","      <th>scgfailratio</th>\n","      <th>erabaddatt</th>\n","      <th>erabaddratio</th>\n","      <th>endcaddatt</th>\n","      <th>endcaddratio</th>\n","      <th>endcmodbymenbatt</th>\n","      <th>endcmodbymenbratio</th>\n","      <th>endcmodbysgnbatt</th>\n","      <th>...</th>\n","      <th>airmacdlbyte</th>\n","      <th>bler_ul</th>\n","      <th>bler_dl</th>\n","      <th>rachpreamblea</th>\n","      <th>nummsg3</th>\n","      <th>attpaging</th>\n","      <th>rssipathavg</th>\n","      <th>dlreceivedcqiavg</th>\n","      <th>endcrelbymenb</th>\n","      <th>uenomax</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2023-05-19 00:00:00</td>\n","      <td>BaseStationE</td>\n","      <td>0.0</td>\n","      <td>28</td>\n","      <td>100.0</td>\n","      <td>27</td>\n","      <td>100.0</td>\n","      <td>11</td>\n","      <td>100.0</td>\n","      <td>34</td>\n","      <td>...</td>\n","      <td>73315.0</td>\n","      <td>19.4</td>\n","      <td>8.8</td>\n","      <td>174</td>\n","      <td>39</td>\n","      <td>2240</td>\n","      <td>-93.5</td>\n","      <td>10.2</td>\n","      <td>4</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2023-05-19 00:05:00</td>\n","      <td>BaseStationE</td>\n","      <td>0.0</td>\n","      <td>16</td>\n","      <td>100.0</td>\n","      <td>14</td>\n","      <td>100.0</td>\n","      <td>4</td>\n","      <td>100.0</td>\n","      <td>23</td>\n","      <td>...</td>\n","      <td>146510.0</td>\n","      <td>17.1</td>\n","      <td>6.1</td>\n","      <td>108</td>\n","      <td>24</td>\n","      <td>2074</td>\n","      <td>-93.4</td>\n","      <td>10.3</td>\n","      <td>1</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2023-05-19 00:10:00</td>\n","      <td>BaseStationE</td>\n","      <td>0.0</td>\n","      <td>23</td>\n","      <td>100.0</td>\n","      <td>18</td>\n","      <td>100.0</td>\n","      <td>3</td>\n","      <td>100.0</td>\n","      <td>15</td>\n","      <td>...</td>\n","      <td>4073.0</td>\n","      <td>20.7</td>\n","      <td>1.4</td>\n","      <td>102</td>\n","      <td>24</td>\n","      <td>2094</td>\n","      <td>-93.7</td>\n","      <td>9.7</td>\n","      <td>2</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2023-05-19 00:15:00</td>\n","      <td>BaseStationE</td>\n","      <td>0.0</td>\n","      <td>21</td>\n","      <td>100.0</td>\n","      <td>9</td>\n","      <td>100.0</td>\n","      <td>12</td>\n","      <td>100.0</td>\n","      <td>16</td>\n","      <td>...</td>\n","      <td>6594.0</td>\n","      <td>17.9</td>\n","      <td>0.8</td>\n","      <td>150</td>\n","      <td>35</td>\n","      <td>1891</td>\n","      <td>-93.7</td>\n","      <td>10.6</td>\n","      <td>5</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2023-05-19 00:20:00</td>\n","      <td>BaseStationE</td>\n","      <td>0.0</td>\n","      <td>33</td>\n","      <td>100.0</td>\n","      <td>26</td>\n","      <td>100.0</td>\n","      <td>3</td>\n","      <td>100.0</td>\n","      <td>13</td>\n","      <td>...</td>\n","      <td>616.0</td>\n","      <td>12.0</td>\n","      <td>2.4</td>\n","      <td>102</td>\n","      <td>39</td>\n","      <td>1927</td>\n","      <td>-93.8</td>\n","      <td>9.7</td>\n","      <td>0</td>\n","      <td>5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 36 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-445d9ed9-e224-4302-95e8-7c0bd506c13d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-be994ee4-429d-4c1f-b01f-443d5695f128\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-be994ee4-429d-4c1f-b01f-443d5695f128')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-be994ee4-429d-4c1f-b01f-443d5695f128 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-445d9ed9-e224-4302-95e8-7c0bd506c13d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-445d9ed9-e224-4302-95e8-7c0bd506c13d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":36}]},{"cell_type":"markdown","source":["## 군집화"],"metadata":{"id":"r8helxx6KXVF"}},{"cell_type":"code","source":["pip install tslearn"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PgxjSjCrKd55","executionInfo":{"status":"ok","timestamp":1691968170360,"user_tz":-540,"elapsed":6822,"user":{"displayName":"다경","userId":"04164406032455601319"}},"outputId":"a341abe8-67f4-40c4-ed07-9681f170ae89"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting tslearn\n","  Downloading tslearn-0.6.1-py3-none-any.whl (368 kB)\n","\u001b[?25l     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/368.5 kB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K     \u001b[91m━━━━━━━\u001b[0m\u001b[91m╸\u001b[0m\u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m71.7/368.5 kB\u001b[0m \u001b[31m1.9 MB/s\u001b[0m eta \u001b[36m0:00:01\u001b[0m\r\u001b[2K     \u001b[91m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[91m╸\u001b[0m\u001b[90m━\u001b[0m \u001b[32m358.4/368.5 kB\u001b[0m \u001b[31m5.0 MB/s\u001b[0m eta \u001b[36m0:00:01\u001b[0m\r\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m368.5/368.5 kB\u001b[0m \u001b[31m4.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from tslearn) (1.23.5)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.10/dist-packages (from tslearn) (1.10.1)\n","Requirement already satisfied: scikit-learn in /usr/local/lib/python3.10/dist-packages (from tslearn) (1.2.2)\n","Requirement already satisfied: numba in /usr/local/lib/python3.10/dist-packages (from tslearn) (0.56.4)\n","Requirement already satisfied: joblib in /usr/local/lib/python3.10/dist-packages (from tslearn) (1.3.2)\n","Requirement already satisfied: llvmlite<0.40,>=0.39.0dev0 in /usr/local/lib/python3.10/dist-packages (from numba->tslearn) (0.39.1)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from numba->tslearn) (67.7.2)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn->tslearn) (3.2.0)\n","Installing collected packages: tslearn\n","Successfully installed tslearn-0.6.1\n"]}]},{"cell_type":"markdown","source":["### 입력 데이터 형태 맞춰주기\n","\n","numpy array"],"metadata":{"id":"xyCikN78QNn4"}},{"cell_type":"markdown","source":["차원 : (기준값 x 시간 x 특성)\n","\n","기준값 : Station 개수 = 10  \n","시간 : 한 Station당 시간 개수 = 17181  \n","특성 : 변수 개수 = 33\n"],"metadata":{"id":"FOIXTCRUOW1f"}},{"cell_type":"code","source":["A = StationA.drop(['datetime', 'ru_id', 'uenomax'], axis = 1).to_numpy()\n","B = StationB.drop(['datetime', 'ru_id'], axis = 1).to_numpy()\n","C = StationC.drop(['datetime', 'ru_id', 'uenomax'], axis = 1).to_numpy()\n","D = StationD.drop(['datetime', 'ru_id', 'uenomax'], axis = 1).to_numpy()\n","E = StationE.drop(['datetime', 'ru_id', 'uenomax'], axis = 1).to_numpy()\n","F = StationF.drop(['datetime', 'ru_id', 'uenomax'], axis = 1).to_numpy()\n","G = StationG.drop(['datetime', 'ru_id', 'uenomax'], axis = 1).to_numpy()\n","H = StationH.drop(['datetime', 'ru_id', 'uenomax'], axis = 1).to_numpy()\n","I= StationI.drop(['datetime', 'ru_id', 'uenomax'], axis = 1).to_numpy()\n","J = StationJ.drop(['datetime', 'ru_id'], axis = 1).to_numpy()"],"metadata":{"id":"_pzuhA-gQNS1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print('A:', A.shape)\n","print('B:', B.shape)\n","print('C:', C.shape)\n","print('D:', D.shape)\n","print('E:', E.shape)\n","print('F:', F.shape)\n","print('G:', G.shape)\n","print('H:', H.shape)\n","print('I:', I.shape)\n","print('J:', J.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cJ0UhXxtR1bK","executionInfo":{"status":"ok","timestamp":1691968198266,"user_tz":-540,"elapsed":2,"user":{"displayName":"다경","userId":"04164406032455601319"}},"outputId":"cece991d-d564-4ebb-bef7-93c8e71b3769"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["A: (17181, 33)\n","B: (17181, 33)\n","C: (17181, 33)\n","D: (17181, 33)\n","E: (17181, 33)\n","F: (17181, 33)\n","G: (17181, 33)\n","H: (17181, 33)\n","I: (17181, 33)\n","J: (17181, 33)\n"]}]},{"cell_type":"code","source":["X = np.stack((A,B,C,D,E,F,G,H,I,J), axis = 0)\n","print(X.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"00wOvxPtRmSW","executionInfo":{"status":"ok","timestamp":1691968199638,"user_tz":-540,"elapsed":2,"user":{"displayName":"다경","userId":"04164406032455601319"}},"outputId":"66238f38-4531-479e-8c5a-e556cee4404c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(10, 17181, 33)\n"]}]},{"cell_type":"markdown","source":["### 시계열 군집 분석\n","\n","클러스터 개수 바꿔가면서 해보기"],"metadata":{"id":"ltvEdRS6L3xd"}},{"cell_type":"code","source":["from tslearn.clustering import TimeSeriesKMeans"],"metadata":{"id":"fnQhcxBoL5iO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["n_clusters = 4"],"metadata":{"id":"6Jnh0eN9OIDd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["tkm = TimeSeriesKMeans(n_clusters = n_clusters,\n","                       metric = 'dtw',\n","                       verbose = False,\n","                       random_state = 202308,\n","                       n_jobs = -1)"],"metadata":{"id":"oE0U7PQeN7-a"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["prediction = tkm.fit_predict(X)"],"metadata":{"id":"PdBECzkwgRsJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(f'cluster_center {tkm.cluster_centers_}')"],"metadata":{"id":"CxGyZLrAgkE0"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["값이 너무 많아서 그런지 돌리다가 세션 다운됨...\n","\n","시간을 다 쓰는게 아니라 좀 줄여서 해봐야겠음"],"metadata":{"id":"vty56D0anm9I"}},{"cell_type":"markdown","source":["### 시간 개수 줄이기"],"metadata":{"id":"q5Hc29Q8nxSd"}},{"cell_type":"markdown","source":["어떻게 줄이지...\n","\n","그냥 간격을 넓혀봐? 5분 -> 30분으로?"],"metadata":{"id":"MjZB-0AH_PdM"}},{"cell_type":"markdown","source":["#### 간격 30분으로 조정\n","\n","확실히 금방 학습됨"],"metadata":{"id":"5hR9rnVgFlpm"}},{"cell_type":"code","source":["print(X.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qIIhMF4K_qCl","executionInfo":{"status":"ok","timestamp":1691968220049,"user_tz":-540,"elapsed":2,"user":{"displayName":"다경","userId":"04164406032455601319"}},"outputId":"8ebb5e00-b72d-4bf7-8fbf-3a799f189c3b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(10, 17181, 33)\n"]}]},{"cell_type":"code","source":["newX = []\n","for i in range(X.shape[0]) :  # station\n","  temp = []\n","  for j in range(X.shape[1]) :  # 시간\n","    if j % 6 == 0 :\n","      temp.append(X[i][j].tolist())\n","  newX.append(temp)"],"metadata":{"id":"MSyBrK2SnwA9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["newX = np.array(newX)\n","newX.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MMvnN-AKCTZR","executionInfo":{"status":"ok","timestamp":1691968225460,"user_tz":-540,"elapsed":423,"user":{"displayName":"다경","userId":"04164406032455601319"}},"outputId":"7e59b3a1-e4f3-4147-8ea1-1be79de9ff95"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(10, 2864, 33)"]},"metadata":{},"execution_count":45}]},{"cell_type":"markdown","source":["##### **최적의 클러스터 개수 찾기**"],"metadata":{"id":"wMAvhNwXFhi_"}},{"cell_type":"code","source":["n_clusters = [2, 3, 4, 5, 6, 7, 8, 9]\n","inertias = []\n","for n in n_clusters :\n","  tkm = TimeSeriesKMeans(n_clusters = n,\n","                         metric = 'dtw',\n","                         verbose = False,\n","                         random_state = 202308,\n","                         n_jobs = -1).fit(newX)\n","  inertias.append(tkm.inertia_)"],"metadata":{"id":"oSvZ3FYSETEW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["sns.lineplot(x = n_clusters, y = inertias)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":445},"id":"fxynSApUFAKE","executionInfo":{"status":"ok","timestamp":1691934789542,"user_tz":-540,"elapsed":823,"user":{"displayName":"다경","userId":"04164406032455601319"}},"outputId":"172e8f62-cac3-4f74-adc7-3f2bd0330613"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["K = 4, 6, 7 해보기"],"metadata":{"id":"zurZDhM0LFho"}},{"cell_type":"markdown","source":["**K = 4**"],"metadata":{"id":"rLCWEwhBLLUG"}},{"cell_type":"code","source":["n_clusters = 4"],"metadata":{"id":"ztHC5ENLCk6I"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["tkm = TimeSeriesKMeans(n_clusters = n_clusters,\n","                       metric = 'dtw',\n","                       verbose = False,\n","                       random_state = 202308,\n","                       n_jobs = -1)"],"metadata":{"id":"DWK86XbeCk6I"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["prediction = tkm.fit_predict(newX)"],"metadata":{"id":"K51VLXvvCk6I"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["prediction"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Fb5KM1B7Efia","executionInfo":{"status":"ok","timestamp":1691935015503,"user_tz":-540,"elapsed":17,"user":{"displayName":"다경","userId":"04164406032455601319"}},"outputId":"01756b55-e152-4d39-afc7-d73f484dab01"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 1, 1, 1, 0, 3, 1, 2, 1, 1])"]},"metadata":{},"execution_count":84}]},{"cell_type":"markdown","source":["B랑 J가 같은 군집"],"metadata":{"id":"tNJ4cV2iL-yX"}},{"cell_type":"markdown","source":["**K = 6**"],"metadata":{"id":"l9vKZHQBLNuh"}},{"cell_type":"code","source":["n_clusters = 6"],"metadata":{"id":"xIW41KGyLSMn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["tkm = TimeSeriesKMeans(n_clusters = n_clusters,\n","                       metric = 'dtw',\n","                       verbose = False,\n","                       random_state = 202308,\n","                       n_jobs = -1)"],"metadata":{"id":"63SI6hPBLSMn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["prediction = tkm.fit_predict(newX)"],"metadata":{"id":"ascp57cbLSMn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["prediction"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8PFvN77JLSMo","executionInfo":{"status":"ok","timestamp":1691935229765,"user_tz":-540,"elapsed":11,"user":{"displayName":"다경","userId":"04164406032455601319"}},"outputId":"999bd7b8-e138-4fbe-876b-12af9ab53ee8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([5, 4, 1, 4, 0, 3, 4, 2, 4, 4])"]},"metadata":{},"execution_count":88}]},{"cell_type":"markdown","source":["B랑 J가 같은 군집"],"metadata":{"id":"hr0zWpBXMBlN"}},{"cell_type":"markdown","source":["**K = 7**"],"metadata":{"id":"Rkc0pL8ELUxc"}},{"cell_type":"code","source":["n_clusters = 7"],"metadata":{"id":"T5aLr5TULW78"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["tkm = TimeSeriesKMeans(n_clusters = n_clusters,\n","                       metric = 'dtw',\n","                       verbose = False,\n","                       random_state = 202308,\n","                       n_jobs = -1)"],"metadata":{"id":"zVZMPpfPLW78"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["prediction = tkm.fit_predict(newX)"],"metadata":{"id":"axUpx-yULW78"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["prediction"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e_F1GeqNLW79","executionInfo":{"status":"ok","timestamp":1691935491267,"user_tz":-540,"elapsed":3,"user":{"displayName":"다경","userId":"04164406032455601319"}},"outputId":"3bb27aab-117a-47c2-b78c-0a4e0413cb43"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([5, 6, 1, 4, 0, 3, 4, 2, 6, 6])"]},"metadata":{},"execution_count":92}]},{"cell_type":"markdown","source":["B랑 J가 같은 군집"],"metadata":{"id":"D_bms5jDMCAQ"}},{"cell_type":"markdown","source":["#### 간격 15분으로 조정"],"metadata":{"id":"LN3Lm2RiLmRs"}},{"cell_type":"code","source":["newX2 = []\n","for i in range(X.shape[0]) :  # station\n","  temp = []\n","  for j in range(X.shape[1]) :  # 시간\n","    if j % 3 == 0 :\n","      temp.append(X[i][j].tolist())\n","  newX2.append(temp)"],"metadata":{"id":"tR7uai_HNjao"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["newX2 = np.array(newX2)\n","newX2.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1691968243545,"user_tz":-540,"elapsed":569,"user":{"displayName":"다경","userId":"04164406032455601319"}},"outputId":"766401bb-ccdf-4b45-9cac-8bbe919687f5","id":"GK8wmSe4Njao"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(10, 5727, 33)"]},"metadata":{},"execution_count":47}]},{"cell_type":"markdown","source":["##### **최적의 클러스터 개수 찾기**"],"metadata":{"id":"Gib8Pko6Njap"}},{"cell_type":"code","source":["n_clusters = [2, 3, 4, 5, 6, 7, 8, 9]\n","inertias = []\n","for n in n_clusters :\n","  tkm = TimeSeriesKMeans(n_clusters = n,\n","                         metric = 'dtw',\n","                         verbose = False,\n","                         random_state = 202308,\n","                         n_jobs = -1).fit(newX2)\n","  inertias.append(tkm.inertia_)"],"metadata":{"id":"_QFHIwXkNjap"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["sns.lineplot(x = n_clusters, y = inertias)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":445},"executionInfo":{"status":"ok","timestamp":1691941576294,"user_tz":-540,"elapsed":4,"user":{"displayName":"다경","userId":"04164406032455601319"}},"outputId":"43c711c0-ffbf-43c0-e4ca-3926aba22902","id":"ZXLyuEAiNjap"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["K = 4, 7, 8 해보기"],"metadata":{"id":"UpywyXhoNjap"}},{"cell_type":"markdown","source":["**K = 4**"],"metadata":{"id":"vp2bRn0PlELM"}},{"cell_type":"code","source":["n_clusters = 4"],"metadata":{"id":"8fHelgialELN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["tkm = TimeSeriesKMeans(n_clusters = n_clusters,\n","                       metric = 'dtw',\n","                       verbose = False,\n","                       random_state = 202308,\n","                       n_jobs = -1)"],"metadata":{"id":"5seERTWnlELN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["prediction = tkm.fit_predict(newX2)"],"metadata":{"id":"NJlvSXivlELN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["prediction"],"metadata":{"executionInfo":{"status":"ok","timestamp":1691968868788,"user_tz":-540,"elapsed":13,"user":{"displayName":"다경","userId":"04164406032455601319"}},"id":"gycOrYe0lELN","colab":{"base_uri":"https://localhost:8080/"},"outputId":"109face4-4c18-4320-bc38-c5aa655db7af"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 1, 1, 1, 0, 3, 1, 2, 1, 1])"]},"metadata":{},"execution_count":51}]},{"cell_type":"markdown","source":["B랑 J가 같은 군집"],"metadata":{"id":"jJAjD0fglStr"}},{"cell_type":"markdown","source":["**K = 7**"],"metadata":{"id":"aaPy4SAzlELN"}},{"cell_type":"code","source":["n_clusters = 7"],"metadata":{"id":"Tnt7xFO8lELN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["tkm = TimeSeriesKMeans(n_clusters = n_clusters,\n","                       metric = 'dtw',\n","                       verbose = False,\n","                       random_state = 202308,\n","                       n_jobs = -1)"],"metadata":{"id":"UhcHD0wdlELO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["prediction = tkm.fit_predict(newX2)"],"metadata":{"id":"Z0nYcM3slELO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["prediction"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1691970363184,"user_tz":-540,"elapsed":13,"user":{"displayName":"다경","userId":"04164406032455601319"}},"outputId":"8b351af9-969b-4ff9-f275-d3b128546ac0","id":"sfZ1wMWxlELO"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([5, 1, 6, 1, 0, 3, 4, 2, 1, 1])"]},"metadata":{},"execution_count":55}]},{"cell_type":"markdown","source":["B랑 J가 같은 군집"],"metadata":{"id":"Tj9yR84elTWS"}},{"cell_type":"markdown","source":["**K = 8**"],"metadata":{"id":"-JjxHA-flELO"}},{"cell_type":"code","source":["n_clusters = 8"],"metadata":{"id":"Q8Ix3v8GlELO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["tkm = TimeSeriesKMeans(n_clusters = n_clusters,\n","                       metric = 'dtw',\n","                       verbose = False,\n","                       random_state = 202308,\n","                       n_jobs = -1)"],"metadata":{"id":"w9nQSWIwlELO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["prediction = tkm.fit_predict(newX2)"],"metadata":{"id":"SzknGiHDlELO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["prediction"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1691971326368,"user_tz":-540,"elapsed":25,"user":{"displayName":"다경","userId":"04164406032455601319"}},"outputId":"20bcd425-ce42-472a-e877-0a8aba3ee417","id":"2qpxiXAplELO"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([6, 1, 5, 7, 0, 3, 4, 2, 1, 1])"]},"metadata":{},"execution_count":59}]},{"cell_type":"markdown","source":["B랑 J가 같은 군집"],"metadata":{"id":"X9hzk-m8lUUO"}},{"cell_type":"markdown","source":["갑자기 든 생각인데 이것도 scaling 먼저 하고 군집화 돌렸어야 했나...?"],"metadata":{"id":"sWrNtR3_KWTf"}},{"cell_type":"markdown","source":["### Scaling 하고 다시 군집화"],"metadata":{"id":"whTS-a16tSjM"}},{"cell_type":"markdown","source":["https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&blogId=wideeyed&logNo=221615552540"],"metadata":{"id":"d3xyozxeub1W"}},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler"],"metadata":{"id":"YcV_TEoytfK2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["scaler = StandardScaler()"],"metadata":{"id":"MFc9rTdZtoX_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 시계열을 선회하면서 피팅\n","for ss in range(X.shape[1]):\n","  scaler.partial_fit(X[:, ss, :])"],"metadata":{"id":"K3KJTGmEuesG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 스케일링\n","results = []\n","for ss in range(X.shape[1]):\n","    results.append(scaler.transform(X[:, ss, :]).reshape(X.shape[0], 1, X.shape[2]))\n","X_scaled = np.concatenate(results, axis=1)"],"metadata":{"id":"OswtEe3yuhwM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_scaled.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GJHNC71KtfCF","executionInfo":{"status":"ok","timestamp":1691978166000,"user_tz":-540,"elapsed":2,"user":{"displayName":"다경","userId":"04164406032455601319"}},"outputId":"59ef41a1-5bc8-4d21-d87f-87493d9ee8e7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(10, 17181, 33)"]},"metadata":{},"execution_count":70}]},{"cell_type":"markdown","source":["#### 간격 15분으로 조정"],"metadata":{"id":"Ih7sYsnXtd3W"}},{"cell_type":"code","source":["newX3 = []\n","for i in range(X_scaled.shape[0]) :  # station\n","  temp = []\n","  for j in range(X_scaled.shape[1]) :  # 시간\n","    if j % 3 == 0 :\n","      temp.append(X_scaled[i][j].tolist())\n","  newX3.append(temp)"],"metadata":{"id":"zXWxtEfOtd3c"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["newX3 = np.array(newX3)\n","newX3.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1691978198654,"user_tz":-540,"elapsed":440,"user":{"displayName":"다경","userId":"04164406032455601319"}},"outputId":"af80c1a2-0b4a-4adb-d6f4-3037ec283ac1","id":"IiZ8wYb0td3c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(10, 5727, 33)"]},"metadata":{},"execution_count":74}]},{"cell_type":"markdown","source":["##### **최적의 클러스터 개수 찾기**"],"metadata":{"id":"vpwYSTpCtd3d"}},{"cell_type":"code","source":["n_clusters = [2, 3, 4, 5, 6, 7, 8, 9]\n","inertias = []\n","for n in n_clusters :\n","  tkm = TimeSeriesKMeans(n_clusters = n,\n","                         metric = 'dtw',\n","                         verbose = False,\n","                         random_state = 202308,\n","                         n_jobs = -1).fit(newX3)\n","  inertias.append(tkm.inertia_)"],"metadata":{"id":"OqgmJoKDtd3d"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["sns.lineplot(x = n_clusters, y = inertias)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":430},"executionInfo":{"status":"ok","timestamp":1691983735604,"user_tz":-540,"elapsed":531,"user":{"displayName":"다경","userId":"04164406032455601319"}},"outputId":"f78922b9-597c-4ee7-abba-780b1db2d95d","id":"ptMqJcWBtd3d"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["**K = 6**"],"metadata":{"id":"zXjTwR7AQdnU"}},{"cell_type":"code","source":["n_clusters = 6"],"metadata":{"id":"EkpeYC_PQhjZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["tkm = TimeSeriesKMeans(n_clusters = n_clusters,\n","                       metric = 'dtw',\n","                       verbose = False,\n","                       random_state = 202308,\n","                       n_jobs = -1)"],"metadata":{"id":"O8RLv0J7QhjZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["prediction = tkm.fit_predict(newX3)"],"metadata":{"id":"rvF7mibBQhjZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["prediction"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1691987271209,"user_tz":-540,"elapsed":13,"user":{"displayName":"다경","userId":"04164406032455601319"}},"outputId":"8023845c-4845-432c-d07b-bf0ebd00dc64","id":"LdMBxwd9Qhja"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 2, 2, 2, 0, 3, 0, 5, 4, 2])"]},"metadata":{},"execution_count":87}]},{"cell_type":"markdown","source":["B랑 J가 같은 군집  \n","**B, C, D, J**"],"metadata":{"id":"CR9DcsOTUpN2"}},{"cell_type":"markdown","source":["**K = 7**"],"metadata":{"id":"1cvy4KAHQjgq"}},{"cell_type":"code","source":["n_clusters = 7"],"metadata":{"id":"czMI3HYrQlq1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["tkm = TimeSeriesKMeans(n_clusters = n_clusters,\n","                       metric = 'dtw',\n","                       verbose = False,\n","                       random_state = 202308,\n","                       n_jobs = -1)"],"metadata":{"id":"04MDKjgYQlq2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["prediction = tkm.fit_predict(newX3)"],"metadata":{"id":"Puvbzio2Qlq2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["prediction"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1691988060178,"user_tz":-540,"elapsed":9,"user":{"displayName":"다경","userId":"04164406032455601319"}},"outputId":"f9fe3140-9b6e-4159-c866-787802f7e320","id":"lOuLfuDsQlq2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 2, 2, 2, 0, 3, 0, 5, 4, 6])"]},"metadata":{},"execution_count":91}]},{"cell_type":"markdown","source":["B랑 J가 다른 군집  \n","근데 J가 다른거랑 묶이는게 없어서 안될듯"],"metadata":{"id":"UX_crSUPWhpr"}}]}